version: '3.7'

services:
  postgres_db:
    image: postgres:15
    hostname: postgres_db
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: prisma
    ports:
      - '5432:5432'
    networks:
      - prisma-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 2s
      retries: 20

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    stdin_open: true
    tty: true  # Keeps the container running for debugging
    depends_on:
      postgres_db:
        condition: service_healthy
    env_file:
      - ./server/.env
    networks:
      - prisma-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    stdin_open: true
    tty: true
    depends_on:
      - server
    env_file:
      - ./frontend/.env.local
    networks:
      - prisma-network

  prisma-studio:
    image: node:lts-alpine3.17
    working_dir: /usr/src/app
    volumes:
      - ./prisma:/usr/src/app/prisma
    command: sh -c "npm install -g prisma && npx prisma studio --port 5555 --browser none"
    ports:
      - "5555:5555"
    env_file:
      - ./server/.env
    networks:
      - prisma-network
    depends_on:
      postgres_db:
        condition: service_healthy
      server:
        condition: service_healthy
networks:
  prisma-network:
    name: prisma-network